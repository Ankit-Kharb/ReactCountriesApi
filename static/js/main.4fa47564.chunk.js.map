{"version":3,"sources":["post.js","nav.js","detail.js","App.js","serviceWorker.js","index.js"],"names":["Post","className","key","this","props","name","to","data","alpha3Code","src","flag","population","region","capital","Component","Nav","onClick","dark","class","id","type","aria-label","onChange","changed","aria-describedby","placeholder","Detail","state","require","axios","get","match","params","then","response","setState","console","log","currencies","App","initialposts","posts","componentDidMount","darked","document","body","classList","toggle","changedHandler","e","target","value","check","use2","filter","str","includes","use","map","el","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4fa47564.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './App.css'\r\n\r\n\r\nclass Post extends Component{\r\n   \r\n\r\n  render(){\r\n    return(\r\n    \r\n      <div className=\"col-md-6 p-5 col-xl-3 col-lg-4  border rounded \" key={this.props.name} >\r\n          <Link to={`/alpha/${this.props.data.alpha3Code}`} >\r\n          <div className=\" shadow-lg bg-white plzz \">\r\n            <div >\r\n                    <img src={this.props.data.flag} className=\"w-100 h-100\"></img>\r\n            </div>\r\n            <div className=\"p-4\">\r\n    \r\n            <h4><strong> {this.props.data.name}</strong> </h4>\r\n            <p><strong>Population:</strong> {this.props.data.population}</p>\r\n            <p><strong>Region:</strong> {this.props.data.region}</p>            \r\n            <p><strong>Capital :</strong> {this.props.data.capital}</p>            \r\n\r\n            </div>\r\n            </div>\r\n            </Link>\r\n      </div>\r\n      \r\n    )\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\nexport default Post","import React, { Component } from 'react'\r\nimport './App.css'\r\nclass Nav extends Component{\r\n\r\n\r\n    render(){\r\n        \r\n        \r\n\r\n        return(\r\n            <div>\r\n            <div className=\"row p-4 shadow-lg rounded align-items-center \">\r\n                <div className=\"col\">\r\n                        <h1>Where In The World ??</h1>\r\n                </div>\r\n                <div className=\"col text-right mypointer\">\r\n                    <h4 onClick={this.props.dark}><i class=\"fa fa-moon-o\"></i>  Dark Mode</h4>\r\n                </div>\r\n                \r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"mt-5 ml-5\">\r\n\r\n                <div className=\"input-group  mb-3 shadow w-25 \">\r\n                    <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text bg-white \" id=\"inputGroup-sizing-default\"><i class=\"fa fa-search\"></i></span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" aria-label=\"Default\" onChange={this.props.changed} aria-describedby=\"inputGroup-sizing-default\" placeholder=\"Seacr for a country\"></input>\r\n                </div>\r\n\r\n                \r\n            </div>\r\n            </div>\r\n\r\n\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default Nav","import React,{Component} from 'react'\r\nimport axios from 'axios'\r\n\r\nclass Detail extends Component{\r\n    state={\r\n        require:{}\r\n    }\r\n    componentDidMount(){\r\n        axios.get(`https://restcountries.eu/rest/v2/alpha/${this.props.match.params.id}`).then(\r\n            response=>{\r\n               // console.log(response)\r\n                this.setState({\r\n                    require:response.data\r\n                })\r\n            }\r\n        )\r\n\r\n\r\n    }\r\nrender(){\r\n\r\n    return (\r\n        <div className=\"ml-5 mt-5 row justify-content-around \">\r\n                <div className=\"col-md-4\">\r\n                    <img src={this.state.require.flag} className=\"w-100 \"></img>\r\n    \r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <h1><strong>{this.state.require.name}</strong></h1>\r\n                    <h4><strong>Population: </strong> {this.state.require.population}</h4>\r\n                    <h4><strong>Region: </strong> {this.state.require.region}</h4>\r\n                    \r\n                    {console.log(this.state.require.currencies)}\r\n                    \r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\nexport default Detail","import React, { Component } from 'react'\nimport Post from './post'\nimport Nav from './nav'\nimport axios from 'axios'\nimport Detail from './detail'\nimport {BrowserRouter as Router,Switch,Route} from  'react-router-dom'\n\n\nclass App extends Component{\n  \n  state={\n    initialposts:[],\n    posts:[],\n    dark:false\n  }\n  \n  componentDidMount=()=>{\naxios.get('https://restcountries.eu/rest/v2/all').then(\n  response=>{\n   console.log(response.data)\n    this.setState({\n      posts:response.data,\n      initialposts:response.data\n    })\n\n\n  }\n)\n  }\n\n  darked=()=>{\n    console.log(\"jkj\")\n    var element = document.body;\n    element.classList.toggle(\"dark-mode\");\n  }\n  \n  changedHandler=(e)=>{\n      console.log(e.target.value);\n      var check=e.target.value\n      var use=[...this.state.initialposts];\n      var use2=use.filter(\n        str=>{\n          return str.name.includes(check)\n        }\n      )\n      console.log(use2)\n      this.setState({\n        posts:use2\n      })\n      \n\n\n  }\n   \n  render(){\n    \n\n\n    \n    var use=this.state.posts.map(\n      el=>{\n\n        return(\n          <Post data={el} dark={this.state.dark}></Post>\n        )\n\n\n      }\n    )\n\n\n\n    return(\n      <Router>\n      \n      <div>\n      \n      <Nav dark={this.darked} changed={this.changedHandler}></Nav>\n      <Switch>\n      <Route path='/alpha/:id' component={Detail}></Route>\n      <div className=\"row ml-5 mt-4\">\n      {use}\n      </div>\n      </Switch>\n      </div>\n      </Router>\n    )\n\n\n  }\n\n\n}\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}